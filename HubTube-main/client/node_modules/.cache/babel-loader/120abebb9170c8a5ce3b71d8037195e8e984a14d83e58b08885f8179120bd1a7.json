{"ast":null,"code":"import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport const postSignupData = async (Username, Usermail, DateofBirth, Password, Profilepic, navigate) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/createuser`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Username,\n        Usermail,\n        DateofBirth,\n        Password,\n        Profilepic\n      })\n    });\n    if (response.ok) {\n      const message = await response.text();\n      if (message === 'User Created Successfully') {\n        const confirmed = window.confirm('Account Created Successfully. Click OK to continue.');\n        if (confirmed) {\n          navigate('/login');\n        }\n      } else {\n        toast.error(message);\n      }\n    } else {\n      const errorMessage = await response.text();\n      if (errorMessage === 'User Already Exists') {\n        toast.error('User Already Exists');\n      } else {\n        toast.error('Some problem occurred. Please try again later.');\n      }\n    }\n  } catch (error) {\n    toast.error('Error occurred while processing your request. Please try again later.');\n  }\n};\n\n// Named export for postloginData\nexport const postloginData = async (Usermail, Password, navigate, login) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/finduser`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Usermail,\n        Password\n      })\n    });\n    if (response.ok) {\n      const user = await response.json();\n      login(user); // Call the login function from context with the user data\n      toast.success('Login Successful');\n      navigate('/Home'); // Redirect to the dashboard or another page\n    } else {\n      const errorMessage = await response.text();\n      if (errorMessage === 'User not exists') {\n        toast.error('User does not exist.');\n      } else if (errorMessage === 'Incorrect password') {\n        toast.error('Incorrect password.');\n      } else {\n        toast.error('Some problem occurred. Please try again later.');\n      }\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    toast.error('Error occurred while processing your request. Please try again later.');\n  }\n};\nexport const getallvideos = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allvideos?userId=${7790}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      const videosData = await response.json();\n      return videosData;\n    } else {\n      toast.error('Failed to fetch data:', response.statusText);\n    }\n  } catch (error) {\n    toast.error(error);\n  }\n};\nexport const getallSeries = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allseries`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      const videosData = await response.json();\n      return videosData;\n    } else {\n      toast.error(response.statusText);\n    }\n  } catch (error) {\n    toast.error(error);\n  }\n};\nexport const getallMovies = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allmovies`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      const videosData = await response.json();\n      return videosData;\n    } else {\n      toast.error(response.statusText);\n    }\n  } catch (error) {\n    toast.error(error);\n  }\n};\nexport const getmyground = async UploadBy => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/mygroundvideos?UploadBy=${UploadBy}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      const videosData = await response.json();\n      return videosData;\n    } else {\n      toast.error(response.statusText);\n    }\n  } catch (error) {\n    toast.error(error);\n  }\n};\nexport const getallusers = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allusers`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      const usersData = await response.json();\n      return usersData;\n    } else {\n      toast.error(response.statusText);\n    }\n  } catch (error) {\n    toast.error(error);\n  }\n};\nexport const getvdoreq = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allvdoreq`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      const vdoreqData = await response.json();\n      return vdoreqData;\n    } else {\n      toast.error(response.statusText);\n    }\n  } catch (error) {\n    toast.error(error);\n  }\n};\nexport const deluser = async Usermail => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/removeuser`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Usermail\n      })\n    });\n    if (response.ok) {\n      const message = await response.text();\n      if (message === 'User deleted successfully') {\n        toast.success('User removed successfully');\n      }\n    } else {\n      const errorMessage = await response.text();\n      if (errorMessage === 'Internal server error') {\n        toast.error('Internal server error');\n      } else {\n        console.error('Error:', errorMessage);\n        toast.error('Some problem occurred. Please try again later.');\n      }\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    toast.error('Error occurred while processing your request. Please try again later.');\n  }\n};\nexport const delvideoreq = async title => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/delvdoreq`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title\n      })\n    });\n    if (response.ok) {\n      const message = await response.text();\n      if (message === 'Video deleted Successfully') {\n        toast.success('Video Request deleted');\n      } else if (message === 'Video not found') {\n        toast.error('Video not found');\n      }\n    } else {\n      const errorMessage = await response.text();\n      if (errorMessage === 'Internal server error') {\n        toast.error('Internal server error');\n      } else {\n        toast.error('Some problem occurred. Please try again later.');\n      }\n    }\n  } catch (error) {\n    toast.error('Error occurred while processing your request. Please try again later.');\n  }\n};\nexport const delvideo = async VideoID => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/removevideo`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        VideoID\n      })\n    });\n    if (response.ok) {\n      const message = await response.text();\n      if (message === 'Video deleted Successfully') {\n        toast.success('Video deleted Successfully');\n      }\n    } else {\n      const errorMessage = await response.text();\n      if (errorMessage === 'Internal server error') {\n        toast.error('Internal server error');\n      } else {\n        console.error('Error:', errorMessage);\n        toast.error('Some problem occurred. Please try again later.');\n      }\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    toast.error('Error occurred while processing your request. Please try again later.');\n  }\n};\nexport const getdashcount = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/getcount`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      const count = await response.json();\n      return count;\n    } else {\n      toast.error(response.statusText);\n    }\n  } catch (error) {\n    toast.error(error);\n  }\n};\nexport const postvidreqData = async (title, videoUrl, thumbnailUrl, genre, duration, isSeries, UploadBy) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/addvdoreq`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        videoUrl,\n        thumbnailUrl,\n        genre,\n        duration,\n        isSeries,\n        UploadBy\n      })\n    });\n    if (response.ok) {\n      const message = await response.text();\n      if (message === 'Request Added Successfully') {\n        toast.success(\"Request Added Successfully\");\n      } else {\n        toast.error(message);\n      }\n    } else {\n      const errorMessage = await response.text();\n      if (errorMessage === 'Internal server error') {\n        toast.error('Internal server error');\n      } else {\n        console.error('Error:', errorMessage);\n        toast.error('Some problem occurred. Please try again later.');\n      }\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    toast.error('Error occurred while processing your request. Please try again later.');\n  }\n};\nexport const postvidData = async (title, videoUrl, thumbnailUrl, genre, duration, isSeries, UploadBy) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/createvideo`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        videoUrl,\n        thumbnailUrl,\n        genre,\n        duration,\n        isSeries,\n        UploadBy\n      })\n    });\n    if (response.ok) {\n      const message = await response.text();\n      if (message === 'Video Added Successfully') {\n        toast.success(\"Video Added Successfully\");\n      } else {\n        toast.error(message);\n      }\n    } else {\n      const errorMessage = await response.text();\n      if (errorMessage === 'Internal server error') {\n        toast.error('Internal server error');\n      } else {\n        console.error('Error:', errorMessage);\n        toast.error('Some problem occurred. Please try again later.');\n      }\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    toast.error('Error occurred while processing your request. Please try again later.');\n  }\n};","map":{"version":3,"names":["toast","postSignupData","Username","Usermail","DateofBirth","Password","Profilepic","navigate","response","fetch","process","env","REACT_APP_BACKEND_URL","method","headers","body","JSON","stringify","ok","message","text","confirmed","window","confirm","error","errorMessage","postloginData","login","user","json","success","console","getallvideos","videosData","statusText","getallSeries","getallMovies","getmyground","UploadBy","getallusers","usersData","getvdoreq","vdoreqData","deluser","delvideoreq","title","delvideo","VideoID","getdashcount","count","postvidreqData","videoUrl","thumbnailUrl","genre","duration","isSeries","postvidData"],"sources":["C:/Users/devan/CascadeProjects/HubTube-main/client/src/services/apiService.js"],"sourcesContent":["import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const postSignupData = async (Username, Usermail, DateofBirth, Password, Profilepic, navigate) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/createuser`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ Username, Usermail, DateofBirth, Password, Profilepic }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const message = await response.text();\r\n      if (message === 'User Created Successfully') {\r\n        const confirmed = window.confirm('Account Created Successfully. Click OK to continue.');\r\n        if (confirmed) {\r\n          navigate('/login');\r\n        }\r\n      } else {\r\n        toast.error(message)\r\n      }\r\n    } else {\r\n      const errorMessage = await response.text();\r\n      if (errorMessage === 'User Already Exists') {\r\n        toast.error('User Already Exists');\r\n      } else {\r\n        toast.error('Some problem occurred. Please try again later.');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    toast.error('Error occurred while processing your request. Please try again later.');\r\n  }\r\n};\r\n\r\n// Named export for postloginData\r\nexport const postloginData = async (Usermail, Password, navigate, login) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/finduser`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ Usermail, Password }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const user = await response.json();\r\n     login(user); // Call the login function from context with the user data\r\n      toast.success('Login Successful');\r\n      navigate('/Home'); // Redirect to the dashboard or another page\r\n    } else {\r\n      const errorMessage = await response.text();\r\n      if (errorMessage === 'User not exists') {\r\n        toast.error('User does not exist.');\r\n      } else if (errorMessage === 'Incorrect password') {\r\n        toast.error('Incorrect password.');\r\n      } else {\r\n        toast.error('Some problem occurred. Please try again later.');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    toast.error('Error occurred while processing your request. Please try again later.');\r\n  }\r\n};\r\nexport const getallvideos = async () => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allvideos?userId=${7790}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        const videosData = await response.json();\r\n        return videosData;\r\n    } else {\r\n        toast.error('Failed to fetch data:', response.statusText);\r\n    }\r\n} catch (error) {\r\n    toast.error(error);\r\n}\r\n};\r\nexport const getallSeries = async () => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allseries`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        const videosData = await response.json();\r\n        return videosData;\r\n    } else {\r\n        toast.error(response.statusText);\r\n    }\r\n} catch (error) {\r\n   toast.error(error);\r\n}\r\n};\r\nexport const getallMovies = async () => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allmovies`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        const videosData = await response.json();\r\n        return videosData;\r\n    } else {\r\n        toast.error(response.statusText);\r\n    }\r\n} catch (error) {\r\n   toast.error(error);\r\n}\r\n};\r\nexport const getmyground = async (UploadBy) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/mygroundvideos?UploadBy=${UploadBy}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (response.ok) {\r\n      const videosData = await response.json();\r\n      return videosData;\r\n    } else {\r\n      toast.error(response.statusText);\r\n    }\r\n  } catch (error) {\r\n   toast.error(error);\r\n  }\r\n};\r\nexport const getallusers = async () => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allusers`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        const usersData = await response.json();\r\n        return usersData;\r\n    } else {\r\n        toast.error(response.statusText);\r\n    }\r\n} catch (error) {\r\n   toast.error(error);\r\n}\r\n};\r\nexport const getvdoreq = async () => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/allvdoreq`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        const vdoreqData = await response.json();\r\n        return vdoreqData;\r\n    } else {\r\n        toast.error(response.statusText);\r\n    }\r\n} catch (error) {\r\n   toast.error(error);\r\n}\r\n};\r\nexport const deluser= async(Usermail)=>{\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/removeuser`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ Usermail }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const message = await response.text();\r\n      if (message === 'User deleted successfully') {\r\n          toast.success('User removed successfully')\r\n        }\r\n      }\r\n else {\r\n      const errorMessage = await response.text();\r\n      if (errorMessage === 'Internal server error') {\r\n        toast.error('Internal server error');\r\n      } else {\r\n        console.error('Error:', errorMessage);\r\n        toast.error('Some problem occurred. Please try again later.');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    toast.error('Error occurred while processing your request. Please try again later.');\r\n  }\r\n} \r\nexport const delvideoreq = async(title)=>{\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/delvdoreq`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ title}),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const message = await response.text();\r\n      if (message === 'Video deleted Successfully') {\r\n          toast.success('Video Request deleted')\r\n        }\r\n        else if (message==='Video not found'){\r\n          toast.error('Video not found')\r\n        }\r\n      } \r\n else {\r\n      const errorMessage = await response.text();\r\n      if (errorMessage === 'Internal server error') {\r\n        toast.error('Internal server error');\r\n      } else {\r\n        toast.error('Some problem occurred. Please try again later.');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    toast.error('Error occurred while processing your request. Please try again later.');\r\n  }\r\n} \r\nexport const delvideo = async(VideoID)=>{\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/removevideo`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ VideoID}),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const message = await response.text();\r\n      if (message === 'Video deleted Successfully') {\r\n          toast.success('Video deleted Successfully')\r\n        }\r\n      }\r\n else {\r\n      const errorMessage = await response.text();\r\n      if (errorMessage === 'Internal server error') {\r\n        toast.error('Internal server error');\r\n      } else {\r\n        console.error('Error:', errorMessage);\r\n        toast.error('Some problem occurred. Please try again later.');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    toast.error('Error occurred while processing your request. Please try again later.');\r\n  }\r\n} \r\nexport const getdashcount = async () => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/getcount`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        const count = await response.json();\r\n        return count;\r\n    } else {\r\n        toast.error(response.statusText);\r\n    }\r\n} catch (error) {\r\n   toast.error(error);\r\n}\r\n};\r\n\r\nexport const postvidreqData = async (title, videoUrl, thumbnailUrl, genre, duration, isSeries, UploadBy) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/addvdoreq`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({title, videoUrl, thumbnailUrl, genre, duration, isSeries, UploadBy }),\r\n    });\r\n   \r\n    if (response.ok) {\r\n      const message = await response.text();\r\n      if (message === 'Request Added Successfully') {\r\n        toast.success(\"Request Added Successfully\")\r\n      } else {\r\n        toast.error(message)\r\n      }\r\n    } else {\r\n      const errorMessage = await response.text();\r\n      if (errorMessage === 'Internal server error') {\r\n        toast.error('Internal server error');\r\n      } else {\r\n        console.error('Error:', errorMessage);\r\n        toast.error('Some problem occurred. Please try again later.');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    toast.error('Error occurred while processing your request. Please try again later.');\r\n  }\r\n};\r\n\r\nexport const postvidData = async (title, videoUrl, thumbnailUrl, genre, duration, isSeries, UploadBy) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/createvideo`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({title, videoUrl, thumbnailUrl, genre, duration, isSeries, UploadBy }),\r\n    });\r\n   \r\n    if (response.ok) {\r\n      const message = await response.text();\r\n      if (message === 'Video Added Successfully') {\r\n        toast.success(\"Video Added Successfully\")\r\n      } else {\r\n        toast.error(message)\r\n      }\r\n    } else {\r\n      const errorMessage = await response.text();\r\n      if (errorMessage === 'Internal server error') {\r\n        toast.error('Internal server error');\r\n      } else {\r\n        console.error('Error:', errorMessage);\r\n        toast.error('Some problem occurred. Please try again later.');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    toast.error('Error occurred while processing your request. Please try again later.');\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}